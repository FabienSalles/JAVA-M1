package calculatrice;


/**
* calculatrice/_CalculatriceStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from calculatrice.idl
* vendredi 7 juin 2013 15 h 07 CEST
*/

public class _CalculatriceStub extends org.omg.CORBA.portable.ObjectImpl implements calculatrice.Calculatrice
{

  public org.omg.CORBA.Any addition (org.omg.CORBA.Any nb1, org.omg.CORBA.Any nb2) throws calculatrice.badParam
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addition", true);
                $out.write_any (nb1);
                $out.write_any (nb2);
                $in = _invoke ($out);
                org.omg.CORBA.Any $result = $in.read_any ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:calculatrice/badParam:1.0"))
                    throw calculatrice.badParamHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return addition (nb1, nb2        );
            } finally {
                _releaseReply ($in);
            }
  } // addition

  public org.omg.CORBA.Any sub (org.omg.CORBA.Any nb1, org.omg.CORBA.Any nb2) throws calculatrice.badParam
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("sub", true);
                $out.write_any (nb1);
                $out.write_any (nb2);
                $in = _invoke ($out);
                org.omg.CORBA.Any $result = $in.read_any ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:calculatrice/badParam:1.0"))
                    throw calculatrice.badParamHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return sub (nb1, nb2        );
            } finally {
                _releaseReply ($in);
            }
  } // sub

  public org.omg.CORBA.Any mult (org.omg.CORBA.Any nb1, org.omg.CORBA.Any nb2) throws calculatrice.badParam
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("mult", true);
                $out.write_any (nb1);
                $out.write_any (nb2);
                $in = _invoke ($out);
                org.omg.CORBA.Any $result = $in.read_any ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:calculatrice/badParam:1.0"))
                    throw calculatrice.badParamHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return mult (nb1, nb2        );
            } finally {
                _releaseReply ($in);
            }
  } // mult

  public org.omg.CORBA.Any div (org.omg.CORBA.Any nb1, org.omg.CORBA.Any nb2) throws calculatrice.badParam, calculatrice.divZero
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("div", true);
                $out.write_any (nb1);
                $out.write_any (nb2);
                $in = _invoke ($out);
                org.omg.CORBA.Any $result = $in.read_any ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:calculatrice/badParam:1.0"))
                    throw calculatrice.badParamHelper.read ($in);
                else if (_id.equals ("IDL:calculatrice/divZero:1.0"))
                    throw calculatrice.divZeroHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return div (nb1, nb2        );
            } finally {
                _releaseReply ($in);
            }
  } // div

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:calculatrice/Calculatrice:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _CalculatriceStub
